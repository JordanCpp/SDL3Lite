# Arcanum Engine Makefile for Borland C++ 3.1
# DOS 16-bit version

# Compiler and tools
CC = bcc
TASM = tasm
TLINK = tlink

# Directories
CORE_DIR = ..\..\core
CONTAINERS_DIR = ..\..\containers
BACKEND_DIR = ..\..\backends\dos16
EXAMPLES_DIR = ..\..\examples

# Compiler flags for DOS 16-bit
CFLAGS = -mc -1 -G -O -d -k- -r- -N- -v- -y-
# -mc = compact memory model
# -1  = 8086/8088 instructions only
# -G  = optimize for speed
# -O  = enable optimizations
# -d  = merge duplicate strings
# -k- = no standard stack frame
# -r- = no register variables
# -N- = no stack overflow checking
# -v- = no source debug info
# -y- = no line number info

# Include paths
INCLUDES = -I$(CORE_DIR) -I$(CONTAINERS_DIR) -I$(BACKEND_DIR)

# Object files
BACKEND_OBJS = \
    $(BACKEND_DIR)\graphics_dos16.obj \
    $(BACKEND_DIR)\input_dos16.obj \
    $(BACKEND_DIR)\audio_dos16.obj \
    $(BACKEND_DIR)\arcanum_dos16.obj

CONTAINER_OBJS = \
    $(CONTAINERS_DIR)\arc_vector.obj \
    $(CONTAINERS_DIR)\arc_string.obj

# Library file
ARCANUM_LIB = arcanum.lib

# Default target
all: $(ARCANUM_LIB) example.exe

# Build the library
$(ARCANUM_LIB): $(BACKEND_OBJS) $(CONTAINER_OBJS)
    del $(ARCANUM_LIB)
    tlib $(ARCANUM_LIB) +$(BACKEND_DIR)\graphics_dos16.obj
    tlib $(ARCANUM_LIB) +$(BACKEND_DIR)\input_dos16.obj
    tlib $(ARCANUM_LIB) +$(BACKEND_DIR)\audio_dos16.obj
    tlib $(ARCANUM_LIB) +$(BACKEND_DIR)\arcanum_dos16.obj
    tlib $(ARCANUM_LIB) +$(CONTAINERS_DIR)\arc_vector.obj
    tlib $(ARCANUM_LIB) +$(CONTAINERS_DIR)\arc_string.obj

# Compile backend object files
$(BACKEND_DIR)\graphics_dos16.obj: $(BACKEND_DIR)\graphics_dos16.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(BACKEND_DIR)\graphics_dos16.c

$(BACKEND_DIR)\input_dos16.obj: $(BACKEND_DIR)\input_dos16.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(BACKEND_DIR)\input_dos16.c

$(BACKEND_DIR)\audio_dos16.obj: $(BACKEND_DIR)\audio_dos16.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(BACKEND_DIR)\audio_dos16.c

$(BACKEND_DIR)\arcanum_dos16.obj: $(BACKEND_DIR)\arcanum_dos16.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(BACKEND_DIR)\arcanum_dos16.c

# Compile container object files
$(CONTAINERS_DIR)\arc_vector.obj: $(CONTAINERS_DIR)\arc_vector.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(CONTAINERS_DIR)\arc_vector.c

$(CONTAINERS_DIR)\arc_string.obj: $(CONTAINERS_DIR)\arc_string.c
    $(CC) $(CFLAGS) $(INCLUDES) -c -o$@ $(CONTAINERS_DIR)\arc_string.c

# Example program
example.exe: $(EXAMPLES_DIR)\simple_demo.c $(ARCANUM_LIB)
    $(CC) $(CFLAGS) $(INCLUDES) -eexample.exe $(EXAMPLES_DIR)\simple_demo.c $(ARCANUM_LIB)

# Clean up
clean:
    del $(BACKEND_DIR)\*.obj
    del $(CONTAINERS_DIR)\*.obj
    del $(ARCANUM_LIB)
    del example.exe
    del *.bak

# Install to a specific directory
install: $(ARCANUM_LIB)
    copy $(ARCANUM_LIB) C:\BC31\LIB
    copy $(CORE_DIR)\arcanum.h C:\BC31\INCLUDE

# Distribution package
dist: clean all
    pkzip -a arcanum_dos16.zip *.exe *.lib $(CORE_DIR)\*.h $(CONTAINERS_DIR)\*.h

# Help target
help:
    @echo Available targets:
    @echo   all      - Build library and example
    @echo   library  - Build only the library
    @echo   example  - Build only the example
    @echo   clean    - Remove object files and executables
    @echo   install  - Install library to Borland C++ directory
    @echo   dist     - Create distribution package
    @echo   help     - Show this help

.SUFFIXES: .c .obj